Resources:
  NetworkResourcesVPCD71E3A67:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC
  NetworkResourcesVPCPublicSubnet1Subnet6F6A3BBC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet1RouteTable6454E7A0:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet1RouteTableAssociationA850997F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet1RouteTable6454E7A0
      SubnetId:
        Ref: NetworkResourcesVPCPublicSubnet1Subnet6F6A3BBC
  NetworkResourcesVPCPublicSubnet1DefaultRouteDE0C2A2C:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: NetworkResourcesVPCIGW7EB493C1
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet1RouteTable6454E7A0
    DependsOn:
      - NetworkResourcesVPCVPCGW3E431846
  NetworkResourcesVPCPublicSubnet2Subnet49109E8D:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet2RouteTable1A2F0874:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet2RouteTableAssociation8004F1DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet2RouteTable1A2F0874
      SubnetId:
        Ref: NetworkResourcesVPCPublicSubnet2Subnet49109E8D
  NetworkResourcesVPCPublicSubnet2DefaultRoute2EA191E2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: NetworkResourcesVPCIGW7EB493C1
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet2RouteTable1A2F0874
    DependsOn:
      - NetworkResourcesVPCVPCGW3E431846
  NetworkResourcesVPCPrivateSubnet1Subnet96D28963:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet1RouteTableC3B50931:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet1RouteTableAssociation7A10B50D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPrivateSubnet1RouteTableC3B50931
      SubnetId:
        Ref: NetworkResourcesVPCPrivateSubnet1Subnet96D28963
  NetworkResourcesVPCPrivateSubnet2Subnet2F126685:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet2RouteTable01CD4248:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet2RouteTableAssociationA346B9C9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPrivateSubnet2RouteTable01CD4248
      SubnetId:
        Ref: NetworkResourcesVPCPrivateSubnet2Subnet2F126685
  NetworkResourcesVPCIGW7EB493C1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC
  NetworkResourcesVPCVPCGW3E431846:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: NetworkResourcesVPCIGW7EB493C1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  ECRResourcesBatchRepositoryF70A7F5B:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: batch
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  ECRResourcesBackendRepository0DE1D09D:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: backend
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  SecurityGroupResourcesTestSGEEF46167:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: test sg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow HTTP traffic
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  IAMResourcesGithubOIDCProvider4827AF64:
    Type: AWS::IAM::OIDCProvider
    Properties:
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
      Url: https://token.actions.githubusercontent.com
  IAMResourcesGithubBatchRepoIAMRoleD5A6307A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                Ref: IAMResourcesGithubOIDCProvider4827AF64
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: repo:pappychamp/itrender_batch:ref:refs/heads/main
      Description: Github batch repo use role
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:CompleteLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:InitiateLayerUpload
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:BatchGetImage
                Resource: "*"
          PolicyName: ECRPushPolicy
      RoleName: GithubBatchRepoIAMRole
  IAMResourcesTaskExecutionIAMRole50279E13:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Description: ECS task use role
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      RoleName: TaskExecutionRole
  IAMResourcesTaskExecutionIAMRoleDefaultPolicy04B0B1C4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: kms:Decrypt
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: IAMResourcesTaskExecutionIAMRoleDefaultPolicy04B0B1C4
      Roles:
        - Ref: IAMResourcesTaskExecutionIAMRole50279E13
  RDSResourcesDBSecretManager80A5E4EA:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        SecretStringTemplate: '{"username":"itrenderdbUser"}'
      Name: itrenderDatabaseSecret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RDSResourcesDBSecretManagerAttachment138C876E:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: RDSResourcesDBSecretManager80A5E4EA
      TargetId:
        Ref: RDSResourcesRDSInstance6A09BF0E
      TargetType: AWS::RDS::DBInstance
  RDSResourcesRDSInstanceSubnetGroup8A6EBCCD:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDSInstance database
      SubnetIds:
        - Ref: NetworkResourcesVPCPrivateSubnet1Subnet96D28963
        - Ref: NetworkResourcesVPCPrivateSubnet2Subnet2F126685
  RDSResourcesRDSInstanceSecurityGroupA0A02CFB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDSInstance database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow PostgreSQL access
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  RDSResourcesRDSInstance6A09BF0E:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "100"
      BackupRetentionPeriod: 7
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t3.micro
      DBName:
        Ref: RDSResourcesDBNameParameterF7365EAE
      DBSubnetGroupName:
        Ref: RDSResourcesRDSInstanceSubnetGroup8A6EBCCD
      Engine: postgres
      EngineVersion: "16.3"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RDSResourcesDBSecretManager80A5E4EA
            - :SecretString:password::}}
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RDSResourcesDBSecretManager80A5E4EA
            - :SecretString:username::}}
      MaxAllocatedStorage: 500
      MultiAZ: false
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - RDSResourcesRDSInstanceSecurityGroupA0A02CFB
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RDSResourcesRdsEndpointParameter5BEEE7E6:
    Type: AWS::SSM::Parameter
    Properties:
      Description: RDS Instance Endpoint
      Name: /itrender/HOST_NAME
      Type: String
      Value:
        Fn::GetAtt:
          - RDSResourcesRDSInstance6A09BF0E
          - Endpoint.Address
Parameters:
  RDSResourcesDBNameParameterF7365EAE:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /itrender/POSTGRES_DB

