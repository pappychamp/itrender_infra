Resources:
  NetworkResourcesVPCD71E3A67:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC
  NetworkResourcesVPCPublicSubnet1Subnet6F6A3BBC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet1RouteTable6454E7A0:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet1RouteTableAssociationA850997F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet1RouteTable6454E7A0
      SubnetId:
        Ref: NetworkResourcesVPCPublicSubnet1Subnet6F6A3BBC
  NetworkResourcesVPCPublicSubnet1DefaultRouteDE0C2A2C:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: NetworkResourcesVPCIGW7EB493C1
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet1RouteTable6454E7A0
    DependsOn:
      - NetworkResourcesVPCVPCGW3E431846
  NetworkResourcesVPCPublicSubnet2Subnet49109E8D:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet2RouteTable1A2F0874:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PublicSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPublicSubnet2RouteTableAssociation8004F1DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet2RouteTable1A2F0874
      SubnetId:
        Ref: NetworkResourcesVPCPublicSubnet2Subnet49109E8D
  NetworkResourcesVPCPublicSubnet2DefaultRoute2EA191E2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: NetworkResourcesVPCIGW7EB493C1
      RouteTableId:
        Ref: NetworkResourcesVPCPublicSubnet2RouteTable1A2F0874
    DependsOn:
      - NetworkResourcesVPCVPCGW3E431846
  NetworkResourcesVPCPrivateSubnet1Subnet96D28963:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet1RouteTableC3B50931:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet1RouteTableAssociation7A10B50D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPrivateSubnet1RouteTableC3B50931
      SubnetId:
        Ref: NetworkResourcesVPCPrivateSubnet1Subnet96D28963
  NetworkResourcesVPCPrivateSubnet2Subnet2F126685:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet2RouteTable01CD4248:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC/PrivateSubnet2
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  NetworkResourcesVPCPrivateSubnet2RouteTableAssociationA346B9C9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NetworkResourcesVPCPrivateSubnet2RouteTable01CD4248
      SubnetId:
        Ref: NetworkResourcesVPCPrivateSubnet2Subnet2F126685
  NetworkResourcesVPCIGW7EB493C1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Itrender/NetworkResources/VPC
  NetworkResourcesVPCVPCGW3E431846:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: NetworkResourcesVPCIGW7EB493C1
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  ECRResourcesBatchRepositoryF70A7F5B:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: batch
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  ECRResourcesBackendRepository0DE1D09D:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: backend
      RepositoryPolicyText:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  SecurityGroupResourcesTestSGEEF46167:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: test sg
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow HTTP traffic
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  IAMResourcesGithubOIDCProvider4827AF64:
    Type: AWS::IAM::OIDCProvider
    Properties:
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
      Url: https://token.actions.githubusercontent.com
  IAMResourcesGithubBatchRepoIAMRoleD5A6307A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                Ref: IAMResourcesGithubOIDCProvider4827AF64
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: repo:pappychamp/itrender_batch:ref:refs/heads/main
      Description: Github batch repo use role
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:CompleteLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:InitiateLayerUpload
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:BatchGetImage
                Resource: "*"
          PolicyName: ECRPushPolicy
      RoleName: GithubBatchRepoIAMRole
  IAMResourcesGithubFrontendRepoIAMRole9013ADA9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                Ref: IAMResourcesGithubOIDCProvider4827AF64
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: repo:pappychamp/itrender_frontend:ref:refs/heads/main
      Description: Github Frontend repo use role
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource: "*"
          PolicyName: S3DeployPolicy
      RoleName: GithubFrontendRepoIAMRole
  IAMResourcesGithubBackendRepoIAMRoleB08C87A1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                Ref: IAMResourcesGithubOIDCProvider4827AF64
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: repo:pappychamp/itrender_backend:ref:refs/heads/main
      Description: Github Backend repo use role
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CloudFormationStack
                Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:GetTemplateSummary
                  - cloudformation:GetTemplate
                  - cloudformation:ListStackResources
                  - cloudformation:UpdateStack
                Resource:
                  - "*"
              - Sid: S3
                Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - "*"
              - Sid: ECRRepository
                Effect: Allow
                Action:
                  - ecr:*
                Resource:
                  - "*"
              - Sid: ECRAuthToken
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource:
                  - "*"
              - Sid: Lambda
                Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:ListTags
                  - lambda:RemovePermission
                  - lambda:TagResource
                  - lambda:UntagResource
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                Resource:
                  - "*"
              - Sid: IAM
                Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:AttachRolePolicy
                  - iam:DeleteRole
                  - iam:DetachRolePolicy
                  - iam:GetRole
                  - iam:TagRole
                Resource:
                  - "*"
              - Sid: IAMPassRole
                Effect: Allow
                Action: iam:PassRole
                Resource: "*"
                Condition:
                  StringEquals:
                    iam:PassedToService: lambda.amazonaws.com
              - Sid: APIGateway
                Effect: Allow
                Action:
                  - apigateway:DELETE
                  - apigateway:GET
                  - apigateway:PATCH
                  - apigateway:POST
                  - apigateway:PUT
                  - apigateway:TagResource
                Resource:
                  - arn:aws:apigateway:*::*
              - Sid: CloudWatchLogGroup
                Effect: Allow
                Action:
                  - logs:*
                Resource:
                  - "*"
          PolicyName: SAMDeployPolicy
      RoleName: GithubBackendRepoIAMRole
  IAMResourcesTaskExecutionIAMRole50279E13:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      Description: ECS task use role
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      RoleName: TaskExecutionRole
  IAMResourcesTaskExecutionIAMRoleDefaultPolicy04B0B1C4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRResourcesBatchRepositoryF70A7F5B
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECSResourcesBatchLogGroupF877012A
                - Arn
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: RDSResourcesNewDBSecretManager1106A7C3
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
              - ssm:GetParameters
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/itrender/QIITA_ACCESS_TOKEN
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/itrender/SENTRY_DSN/batch
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/itrender/YOUTUBE_API_KEY
        Version: "2012-10-17"
      PolicyName: IAMResourcesTaskExecutionIAMRoleDefaultPolicy04B0B1C4
      Roles:
        - Ref: IAMResourcesTaskExecutionIAMRole50279E13
  IAMResourcesApiGatewayCloudWatchLogRole17381A09:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
  IAMResourcesApiGatewayAccount583EBE07:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - IAMResourcesApiGatewayCloudWatchLogRole17381A09
          - Arn
  S3ResourcesWebsiteBucket6F8BAB69:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: itrender.net
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  S3ResourcesWebsiteBucketPolicyD43366E4:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3ResourcesWebsiteBucket6F8BAB69
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Condition:
              StringEquals:
                AWS:SourceArn:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":cloudfront::"
                      - Ref: AWS::AccountId
                      - :distribution/
                      - Ref: CloudFrontResourcesDistribution773EB15D
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - S3ResourcesWebsiteBucket6F8BAB69
                      - Arn
                  - /*
        Version: "2012-10-17"
  S3ResourcesSAMBucketE5EDEBA3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: itrender-sam-bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  RDSResourcesNewDBSecretManager1106A7C3:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        SecretStringTemplate: '{"username":"itrenderdbUser"}'
      Name: newDatabaseSecret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RDSResourcesNewDBSecretManagerAttachmentB8ACF44D:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: RDSResourcesNewDBSecretManager1106A7C3
      TargetId:
        Ref: RDSResourcesNewRDSInstance36B29509
      TargetType: AWS::RDS::DBInstance
  RDSResourcesNewRDSInstanceSubnetGroup24F3E5C8:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for NewRDSInstance database
      SubnetIds:
        - Ref: NetworkResourcesVPCPrivateSubnet1Subnet96D28963
        - Ref: NetworkResourcesVPCPrivateSubnet2Subnet2F126685
  RDSResourcesNewRDSInstanceSecurityGroup03D1606F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for NewRDSInstance database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow PostgreSQL access
          FromPort: 5432
          IpProtocol: tcp
          ToPort: 5432
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  RDSResourcesNewRDSInstance36B29509:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "20"
      BackupRetentionPeriod: 7
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t3.micro
      DBName:
        Ref: RDSResourcesDBNameParameterF7365EAE
      DBSubnetGroupName:
        Ref: RDSResourcesNewRDSInstanceSubnetGroup24F3E5C8
      Engine: postgres
      EngineVersion: "16.3"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RDSResourcesNewDBSecretManager1106A7C3
            - :SecretString:password::}}
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RDSResourcesNewDBSecretManager1106A7C3
            - :SecretString:username::}}
      MaxAllocatedStorage: 100
      MultiAZ: false
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - RDSResourcesNewRDSInstanceSecurityGroup03D1606F
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ECSResourcesitrenderClusterE6F3C61F:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: itrenderCluster
  ECSResourcesitrenderBatchTaskDefinitionTaskRole8CEA45A9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
  ECSResourcesitrenderBatchTaskDefinition912FE447:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: ENVIRONMENT
              Value: production
          Essential: true
          Image:
            Fn::Join:
              - ""
              - - Fn::Select:
                    - 4
                    - Fn::Split:
                        - ":"
                        - Fn::GetAtt:
                            - ECRResourcesBatchRepositoryF70A7F5B
                            - Arn
                - .dkr.ecr.
                - Fn::Select:
                    - 3
                    - Fn::Split:
                        - ":"
                        - Fn::GetAtt:
                            - ECRResourcesBatchRepositoryF70A7F5B
                            - Arn
                - "."
                - Ref: AWS::URLSuffix
                - /
                - Ref: ECRResourcesBatchRepositoryF70A7F5B
                - :latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: ECSResourcesBatchLogGroupF877012A
              awslogs-stream-prefix: ecs
              awslogs-region:
                Ref: AWS::Region
          Name: BatchTask
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Secrets:
            - Name: HOST_NAME
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: RDSResourcesNewDBSecretManager1106A7C3
                    - ":host::"
            - Name: PORT_NUMBER
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: RDSResourcesNewDBSecretManager1106A7C3
                    - ":port::"
            - Name: POSTGRES_DB
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: RDSResourcesNewDBSecretManager1106A7C3
                    - ":dbname::"
            - Name: POSTGRES_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: RDSResourcesNewDBSecretManager1106A7C3
                    - ":password::"
            - Name: POSTGRES_USER
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: RDSResourcesNewDBSecretManager1106A7C3
                    - ":username::"
            - Name: QIITA_ACCESS_TOKEN
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/itrender/QIITA_ACCESS_TOKEN
            - Name: SENTRY_DSN
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/itrender/SENTRY_DSN/batch
            - Name: YOUTUBE_API_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/itrender/YOUTUBE_API_KEY
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - IAMResourcesTaskExecutionIAMRole50279E13
          - Arn
      Family: itrenderBatchTaskDefinition
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - ECSResourcesitrenderBatchTaskDefinitionTaskRole8CEA45A9
          - Arn
  ECSResourcesitrenderBatchTaskDefinitionEventsRoleB3A33D4D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
  ECSResourcesitrenderBatchTaskDefinitionEventsRoleDefaultPolicy2440D80A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecs:RunTask
            Condition:
              ArnEquals:
                ecs:cluster:
                  Fn::GetAtt:
                    - ECSResourcesitrenderClusterE6F3C61F
                    - Arn
            Effect: Allow
            Resource:
              Ref: ECSResourcesitrenderBatchTaskDefinition912FE447
          - Action: ecs:TagResource
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecs:"
                  - Ref: AWS::Region
                  - :*:task/
                  - Ref: ECSResourcesitrenderClusterE6F3C61F
                  - /*
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ECSResourcesitrenderBatchTaskDefinitionTaskRole8CEA45A9
                  - Arn
              - Fn::GetAtt:
                  - IAMResourcesTaskExecutionIAMRole50279E13
                  - Arn
        Version: "2012-10-17"
      PolicyName: ECSResourcesitrenderBatchTaskDefinitionEventsRoleDefaultPolicy2440D80A
      Roles:
        - Ref: ECSResourcesitrenderBatchTaskDefinitionEventsRoleB3A33D4D
  ECSResourcesitrenderBatchTaskDefinitionSecurityGroupFA6B5E4A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Itrender/ECSResources/itrenderBatchTaskDefinition/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  ECSResourcesBatchService939B8236:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: ECSResourcesitrenderClusterE6F3C61F
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 0
      EnableECSManagedTags: false
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - ECSResourcesBatchServiceSecurityGroupAD15A8BA
                - GroupId
          Subnets:
            - Ref: NetworkResourcesVPCPrivateSubnet1Subnet96D28963
            - Ref: NetworkResourcesVPCPrivateSubnet2Subnet2F126685
      TaskDefinition:
        Ref: ECSResourcesitrenderBatchTaskDefinition912FE447
    DependsOn:
      - ECSResourcesitrenderBatchTaskDefinitionTaskRole8CEA45A9
  ECSResourcesBatchServiceSecurityGroupAD15A8BA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Itrender/ECSResources/BatchService/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
    DependsOn:
      - ECSResourcesitrenderBatchTaskDefinitionTaskRole8CEA45A9
  ECSResourcesBatchLogGroupF877012A:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/batch-task
      RetentionInDays: 7
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  LambdaResourcesBackendFunctionSecurityGroup778CE9C3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Lambda to access the database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: NetworkResourcesVPCD71E3A67
  LambdaResourcesBackendLambdaLogGroupD59E3598:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /lambda/BackendFunction
      RetentionInDays: 7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  LambdaResourcesBackendFunctionServiceRoleB7200743:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - NetworkResourcesVPCPrivateSubnet1RouteTableAssociation7A10B50D
      - NetworkResourcesVPCPrivateSubnet2RouteTableAssociationA346B9C9
  LambdaResourcesBackendFunctionServiceRoleDefaultPolicy3EEA2D0C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - LambdaResourcesBackendLambdaLogGroupD59E3598
                - Arn
        Version: "2012-10-17"
      PolicyName: LambdaResourcesBackendFunctionServiceRoleDefaultPolicy3EEA2D0C
      Roles:
        - Ref: LambdaResourcesBackendFunctionServiceRoleB7200743
    DependsOn:
      - NetworkResourcesVPCPrivateSubnet1RouteTableAssociation7A10B50D
      - NetworkResourcesVPCPrivateSubnet2RouteTableAssociationA346B9C9
  LambdaResourcesBackendFunctionC9C2709E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 4
                  - Fn::Split:
                      - ":"
                      - Fn::GetAtt:
                          - ECRResourcesBackendRepository0DE1D09D
                          - Arn
              - .dkr.ecr.
              - Fn::Select:
                  - 3
                  - Fn::Split:
                      - ":"
                      - Fn::GetAtt:
                          - ECRResourcesBackendRepository0DE1D09D
                          - Arn
              - "."
              - Ref: AWS::URLSuffix
              - /
              - Ref: ECRResourcesBackendRepository0DE1D09D
              - :latest
      Environment:
        Variables:
          POSTGRES_USER:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:arn:aws:secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:newDatabaseSecret-eegf6t:SecretString:username::}}
          POSTGRES_PASSWORD:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:arn:aws:secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:newDatabaseSecret-eegf6t:SecretString:password::}}
          POSTGRES_DB:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:arn:aws:secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:newDatabaseSecret-eegf6t:SecretString:dbname::}}
          HOST_NAME:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:arn:aws:secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:newDatabaseSecret-eegf6t:SecretString:host::}}
          PORT_NUMBER:
            Fn::Join:
              - ""
              - - "{{resolve:secretsmanager:arn:aws:secretsmanager:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :secret:newDatabaseSecret-eegf6t:SecretString:port::}}
          SENTRY_DSN:
            Ref: SsmParameterValueitrenderSENTRYDSNbackendC96584B6F00A464EAD1953AFF4B05118Parameter
          ENVIRONMENT: production
      FunctionName: BackendFunction
      LoggingConfig:
        ApplicationLogLevel: WARN
        LogFormat: JSON
        LogGroup:
          Ref: LambdaResourcesBackendLambdaLogGroupD59E3598
        SystemLogLevel: WARN
      PackageType: Image
      Role:
        Fn::GetAtt:
          - LambdaResourcesBackendFunctionServiceRoleB7200743
          - Arn
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - LambdaResourcesBackendFunctionSecurityGroup778CE9C3
              - GroupId
        SubnetIds:
          - Ref: NetworkResourcesVPCPrivateSubnet1Subnet96D28963
          - Ref: NetworkResourcesVPCPrivateSubnet2Subnet2F126685
    DependsOn:
      - LambdaResourcesBackendFunctionServiceRoleDefaultPolicy3EEA2D0C
      - LambdaResourcesBackendFunctionServiceRoleB7200743
      - NetworkResourcesVPCPrivateSubnet1RouteTableAssociation7A10B50D
      - NetworkResourcesVPCPrivateSubnet2RouteTableAssociationA346B9C9
  apigatewayResourcesApiGatewayAccessLogsA65962CB:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /apigateway
      RetentionInDays: 7
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  apigatewayResourcesBackendApiGW54E5CD70:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: BackendApiGW
      ProtocolType: HTTP
  apigatewayResourcesBackendApiGWANYproxyBackendIntegrationE09BA4F3:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: apigatewayResourcesBackendApiGW54E5CD70
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - LambdaResourcesBackendFunctionC9C2709E
          - Arn
      PayloadFormatVersion: "2.0"
  apigatewayResourcesBackendApiGWANYproxyBackendIntegrationPermissionE6B68135:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - LambdaResourcesBackendFunctionC9C2709E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apigatewayResourcesBackendApiGW54E5CD70
            - /*/*/{proxy+}
  apigatewayResourcesBackendApiGWANYproxy8325D1F1:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: apigatewayResourcesBackendApiGW54E5CD70
      AuthorizationType: NONE
      RouteKey: ANY /{proxy+}
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: apigatewayResourcesBackendApiGWANYproxyBackendIntegrationE09BA4F3
  apigatewayResourcesBackendApiGWprodD97BC4B3:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - apigatewayResourcesApiGatewayAccessLogsA65962CB
            - Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status", "errorMessage": "$context.error.message", "protocol":"$context.protocol" }'
      ApiId:
        Ref: apigatewayResourcesBackendApiGW54E5CD70
      AutoDeploy: true
      DefaultRouteSettings:
        ThrottlingBurstLimit: 50
        ThrottlingRateLimit: 10
      StageName: api
  CloudFrontResourcesDistributionOrigin1S3OriginAccessControlA96A45E9:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: ItrenderCloudFrontResourcesDOrigin1S3OriginAccessControl38F1D73B
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  CloudFrontResourcesDistribution773EB15D:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - itrender.net
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
            Compress: true
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac
            PathPattern: /api/*
            TargetOriginId: ItrenderCloudFrontResourcesDistributionOrigin2C6918918
            ViewerProtocolPolicy: https-only
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: ItrenderCloudFrontResourcesDistributionOrigin1C38E7B4D
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - DomainName:
              Fn::GetAtt:
                - S3ResourcesWebsiteBucket6F8BAB69
                - RegionalDomainName
            Id: ItrenderCloudFrontResourcesDistributionOrigin1C38E7B4D
            OriginAccessControlId:
              Fn::GetAtt:
                - CloudFrontResourcesDistributionOrigin1S3OriginAccessControlA96A45E9
                - Id
            S3OriginConfig:
              OriginAccessIdentity: ""
          - CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::Select:
                - 0
                - Fn::Split:
                    - /
                    - Fn::Select:
                        - 1
                        - Fn::Split:
                            - ://
                            - Fn::GetAtt:
                                - apigatewayResourcesBackendApiGW54E5CD70
                                - ApiEndpoint
            Id: ItrenderCloudFrontResourcesDistributionOrigin2C6918918
        Restrictions:
          GeoRestriction:
            Locations:
              - JP
            RestrictionType: whitelist
        ViewerCertificate:
          AcmCertificateArn:
            Ref: SsmParameterValueitrenderCertificateArnC96584B6F00A464EAD1953AFF4B05118Parameter
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
  CodePipelineResourcesBackendLambdaUpdateProjectRoleC055580A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
  CodePipelineResourcesBackendLambdaUpdateProjectRoleDefaultPolicy828B8490:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodePipelineResourcesBackendLambdaUpdateProject50B02BBE
                    - :*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodePipelineResourcesBackendLambdaUpdateProject50B02BBE
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CodePipelineResourcesBackendLambdaUpdateProject50B02BBE
                  - -*
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:DescribeImages
              - ecr:DescribeRepositories
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRResourcesBackendRepository0DE1D09D
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action: lambda:UpdateFunctionCode
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - LambdaResourcesBackendFunctionC9C2709E
                - Arn
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBackendLambdaUpdateProjectRoleDefaultPolicy828B8490
      Roles:
        - Ref: CodePipelineResourcesBackendLambdaUpdateProjectRoleC055580A
  CodePipelineResourcesBackendLambdaUpdateProject50B02BBE:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Environment:
        ComputeType: BUILD_LAMBDA_1GB
        Image: aws/codebuild/amazonlinux-x86_64-lambda-standard:corretto21
        PrivilegedMode: false
        Type: LINUX_LAMBDA_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CodePipelineResourcesBackendLambdaUpdateProjectRoleC055580A
          - Arn
      Source:
        BuildSpec:
          Fn::Join:
            - ""
            - - |-
                {
                  "version": "0.2",
                  "phases": {
                    "build": {
                      "commands": [
                        "imageDigest=$(aws ecr describe-images --repository-name 
              - Ref: ECRResourcesBackendRepository0DE1D09D
              - |-2
                 | jq -r '.imageDetails[] | select(.imageTags == [\"latest\"]) | .imageDigest')",
                        "echo \"Image Digest: $imageDigest\"",
                        "aws lambda update-function-code --function-name 
              - Ref: LambdaResourcesBackendFunctionC9C2709E
              - " --image-uri "
              - Fn::Select:
                  - 4
                  - Fn::Split:
                      - ":"
                      - Fn::GetAtt:
                          - ECRResourcesBackendRepository0DE1D09D
                          - Arn
              - .dkr.ecr.
              - Fn::Select:
                  - 3
                  - Fn::Split:
                      - ":"
                      - Fn::GetAtt:
                          - ECRResourcesBackendRepository0DE1D09D
                          - Arn
              - "."
              - Ref: AWS::URLSuffix
              - /
              - Ref: ECRResourcesBackendRepository0DE1D09D
              - |-
                @$imageDigest"
                      ]
                    }
                  }
                }
        Type: CODEPIPELINE
  CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  CodePipelineResourcesBackendPipelineArtifactsBucketPolicy95D6CC40:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                        - Arn
                    - /*
        Version: "2012-10-17"
  CodePipelineResourcesBackendPipelineRole21DC6A3E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
  CodePipelineResourcesBackendPipelineRoleDefaultPolicyCBC70A83:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                        - Arn
                    - /*
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineBuildLambdaUpdateCodePipelineActionRole6B17734C
                  - Arn
              - Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineSourceECRPullCodePipelineActionRole5BB1500A
                  - Arn
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBackendPipelineRoleDefaultPolicyCBC70A83
      Roles:
        - Ref: CodePipelineResourcesBackendPipelineRole21DC6A3E
  CodePipelineResourcesBackendPipeline12BC99AD:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
        Type: S3
      Name: BackendPipeline
      PipelineType: V2
      RoleArn:
        Fn::GetAtt:
          - CodePipelineResourcesBackendPipelineRole21DC6A3E
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: ECR
                Version: "1"
              Configuration:
                RepositoryName:
                  Ref: ECRResourcesBackendRepository0DE1D09D
                ImageTag: latest
              Name: ECR-Pull
              OutputArtifacts:
                - Name: Artifact_Source_ECR-Pull
              RoleArn:
                Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineSourceECRPullCodePipelineActionRole5BB1500A
                  - Arn
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CodePipelineResourcesBackendLambdaUpdateProject50B02BBE
              InputArtifacts:
                - Name: Artifact_Source_ECR-Pull
              Name: Lambda-Update
              RoleArn:
                Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineBuildLambdaUpdateCodePipelineActionRole6B17734C
                  - Arn
              RunOrder: 1
          Name: Build
    DependsOn:
      - CodePipelineResourcesBackendPipelineRoleDefaultPolicyCBC70A83
      - CodePipelineResourcesBackendPipelineRole21DC6A3E
  CodePipelineResourcesBackendPipelineSourceECRPullCodePipelineActionRole5BB1500A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
  CodePipelineResourcesBackendPipelineSourceECRPullCodePipelineActionRoleDefaultPolicy5070C434:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecr:DescribeImages
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRResourcesBackendRepository0DE1D09D
                - Arn
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBackendPipelineArtifactsBucket5CDFBB7F
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBackendPipelineSourceECRPullCodePipelineActionRoleDefaultPolicy5070C434
      Roles:
        - Ref: CodePipelineResourcesBackendPipelineSourceECRPullCodePipelineActionRole5BB1500A
  CodePipelineResourcesBackendPipelineSourceECRPullItrenderCodePipelineResourcesBackendPipelineCFD155CBSourceEventRule606C6B2E:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        detail-type:
          - ECR Image Action
        source:
          - aws.ecr
        detail:
          result:
            - SUCCESS
          repository-name:
            - Ref: ECRResourcesBackendRepository0DE1D09D
          image-tag:
            - latest
          action-type:
            - PUSH
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: CodePipelineResourcesBackendPipeline12BC99AD
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - CodePipelineResourcesBackendPipelineEventsRole46C61BDE
              - Arn
  CodePipelineResourcesBackendPipelineEventsRole46C61BDE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
  CodePipelineResourcesBackendPipelineEventsRoleDefaultPolicyD3CB4C05:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codepipeline:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CodePipelineResourcesBackendPipeline12BC99AD
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBackendPipelineEventsRoleDefaultPolicyD3CB4C05
      Roles:
        - Ref: CodePipelineResourcesBackendPipelineEventsRole46C61BDE
  CodePipelineResourcesBackendPipelineBuildLambdaUpdateCodePipelineActionRole6B17734C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
  CodePipelineResourcesBackendPipelineBuildLambdaUpdateCodePipelineActionRoleDefaultPolicy414FAE85:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodePipelineResourcesBackendLambdaUpdateProject50B02BBE
                - Arn
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBackendPipelineBuildLambdaUpdateCodePipelineActionRoleDefaultPolicy414FAE85
      Roles:
        - Ref: CodePipelineResourcesBackendPipelineBuildLambdaUpdateCodePipelineActionRole6B17734C
  CodePipelineResourcesBatchECSUpdateProjectRole93823222:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
  CodePipelineResourcesBatchECSUpdateProjectRoleDefaultPolicy5C36A4EE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodePipelineResourcesBatchECSUpdateProject60FC0241
                    - :*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: CodePipelineResourcesBatchECSUpdateProject60FC0241
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: CodePipelineResourcesBatchECSUpdateProject60FC0241
                  - -*
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:DescribeImages
              - ecr:DescribeRepositories
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRResourcesBatchRepositoryF70A7F5B
                - Arn
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBatchECSUpdateProjectRoleDefaultPolicy5C36A4EE
      Roles:
        - Ref: CodePipelineResourcesBatchECSUpdateProjectRole93823222
  CodePipelineResourcesBatchECSUpdateProject60FC0241:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Environment:
        ComputeType: BUILD_LAMBDA_1GB
        Image: aws/codebuild/amazonlinux-x86_64-lambda-standard:corretto21
        PrivilegedMode: false
        Type: LINUX_LAMBDA_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - CodePipelineResourcesBatchECSUpdateProjectRole93823222
          - Arn
      Source:
        BuildSpec:
          Fn::Join:
            - ""
            - - |-
                {
                  "version": "0.2",
                  "phases": {
                    "build": {
                      "commands": [
                        "imageDigest=$(aws ecr describe-images --repository-name 
              - Ref: ECRResourcesBatchRepositoryF70A7F5B
              - |-2
                 | jq -r '.imageDetails[] | select(.imageTags == [\"latest\"]) | .imageDigest')",
                        "echo \"Image Digest: $imageDigest\"",
                        "printf '[{\"name\": \"BatchTask\", \"imageUri\": \"%s@%s\"}]\n' \"
              - Fn::Select:
                  - 4
                  - Fn::Split:
                      - ":"
                      - Fn::GetAtt:
                          - ECRResourcesBatchRepositoryF70A7F5B
                          - Arn
              - .dkr.ecr.
              - Fn::Select:
                  - 3
                  - Fn::Split:
                      - ":"
                      - Fn::GetAtt:
                          - ECRResourcesBatchRepositoryF70A7F5B
                          - Arn
              - "."
              - Ref: AWS::URLSuffix
              - /
              - Ref: ECRResourcesBatchRepositoryF70A7F5B
              - |-
                \" \"$imageDigest\" > imagedefinitions.json",
                        "echo \"imagedefinitions.json 内容:\"",
                        "cat imagedefinitions.json"
                      ]
                    }
                  },
                  "artifacts": {
                    "files": [
                      "imagedefinitions.json"
                    ]
                  }
                }
        Type: CODEPIPELINE
  CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  CodePipelineResourcesBatchPipelineArtifactsBucketPolicy1E59907E:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                        - Arn
                    - /*
        Version: "2012-10-17"
  CodePipelineResourcesBatchPipelineRoleEB726DFF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
  CodePipelineResourcesBatchPipelineRoleDefaultPolicyAF886F4A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                        - Arn
                    - /*
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineBuildimagedefinitionsCreateCodePipelineActionRole7C19E3C7
                  - Arn
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineDeployECSUpdateCodePipelineActionRole74DE45DD
                  - Arn
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineSourceECRPullCodePipelineActionRoleD9C04DEE
                  - Arn
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBatchPipelineRoleDefaultPolicyAF886F4A
      Roles:
        - Ref: CodePipelineResourcesBatchPipelineRoleEB726DFF
  CodePipelineResourcesBatchPipelineCD71CF92:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
        Type: S3
      Name: BatchPipeline
      PipelineType: V2
      RoleArn:
        Fn::GetAtt:
          - CodePipelineResourcesBatchPipelineRoleEB726DFF
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: ECR
                Version: "1"
              Configuration:
                RepositoryName:
                  Ref: ECRResourcesBatchRepositoryF70A7F5B
                ImageTag: latest
              Name: ECR-Pull
              OutputArtifacts:
                - Name: Artifact_Source_ECR-Pull
              RoleArn:
                Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineSourceECRPullCodePipelineActionRoleD9C04DEE
                  - Arn
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: CodePipelineResourcesBatchECSUpdateProject60FC0241
              InputArtifacts:
                - Name: Artifact_Source_ECR-Pull
              Name: imagedefinitions-Create
              OutputArtifacts:
                - Name: Artifact_Build_imagedefinitions-Create
              RoleArn:
                Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineBuildimagedefinitionsCreateCodePipelineActionRole7C19E3C7
                  - Arn
              RunOrder: 1
          Name: Build
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: "1"
              Configuration:
                ClusterName:
                  Ref: ECSResourcesitrenderClusterE6F3C61F
                ServiceName:
                  Fn::GetAtt:
                    - ECSResourcesBatchService939B8236
                    - Name
              InputArtifacts:
                - Name: Artifact_Build_imagedefinitions-Create
              Name: ECS-Update
              RoleArn:
                Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineDeployECSUpdateCodePipelineActionRole74DE45DD
                  - Arn
              RunOrder: 1
          Name: Deploy
    DependsOn:
      - CodePipelineResourcesBatchPipelineRoleDefaultPolicyAF886F4A
      - CodePipelineResourcesBatchPipelineRoleEB726DFF
  CodePipelineResourcesBatchPipelineSourceECRPullCodePipelineActionRoleD9C04DEE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
  CodePipelineResourcesBatchPipelineSourceECRPullCodePipelineActionRoleDefaultPolicyD02ACDB5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecr:DescribeImages
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ECRResourcesBatchRepositoryF70A7F5B
                - Arn
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBatchPipelineSourceECRPullCodePipelineActionRoleDefaultPolicyD02ACDB5
      Roles:
        - Ref: CodePipelineResourcesBatchPipelineSourceECRPullCodePipelineActionRoleD9C04DEE
  CodePipelineResourcesBatchPipelineSourceECRPullItrenderCodePipelineResourcesBatchPipelineDBF4F9C6SourceEventRule9E28B0B1:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        detail-type:
          - ECR Image Action
        source:
          - aws.ecr
        detail:
          result:
            - SUCCESS
          repository-name:
            - Ref: ECRResourcesBatchRepositoryF70A7F5B
          image-tag:
            - latest
          action-type:
            - PUSH
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: CodePipelineResourcesBatchPipelineCD71CF92
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - CodePipelineResourcesBatchPipelineEventsRoleD404B6A7
              - Arn
  CodePipelineResourcesBatchPipelineEventsRoleD404B6A7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
  CodePipelineResourcesBatchPipelineEventsRoleDefaultPolicy621AD6BA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codepipeline:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: CodePipelineResourcesBatchPipelineCD71CF92
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBatchPipelineEventsRoleDefaultPolicy621AD6BA
      Roles:
        - Ref: CodePipelineResourcesBatchPipelineEventsRoleD404B6A7
  CodePipelineResourcesBatchPipelineBuildimagedefinitionsCreateCodePipelineActionRole7C19E3C7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
  CodePipelineResourcesBatchPipelineBuildimagedefinitionsCreateCodePipelineActionRoleDefaultPolicy7FEC80B2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CodePipelineResourcesBatchECSUpdateProject60FC0241
                - Arn
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBatchPipelineBuildimagedefinitionsCreateCodePipelineActionRoleDefaultPolicy7FEC80B2
      Roles:
        - Ref: CodePipelineResourcesBatchPipelineBuildimagedefinitionsCreateCodePipelineActionRole7C19E3C7
  CodePipelineResourcesBatchPipelineDeployECSUpdateCodePipelineActionRole74DE45DD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
  CodePipelineResourcesBatchPipelineDeployECSUpdateCodePipelineActionRoleDefaultPolicy52C3E6CC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecs:DescribeServices
              - ecs:DescribeTaskDefinition
              - ecs:DescribeTasks
              - ecs:ListTasks
              - ecs:RegisterTaskDefinition
              - ecs:TagResource
              - ecs:UpdateService
            Effect: Allow
            Resource: "*"
          - Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - ec2.amazonaws.com
                  - ecs-tasks.amazonaws.com
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CodePipelineResourcesBatchPipelineArtifactsBucketC90F7E0E
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: CodePipelineResourcesBatchPipelineDeployECSUpdateCodePipelineActionRoleDefaultPolicy52C3E6CC
      Roles:
        - Ref: CodePipelineResourcesBatchPipelineDeployECSUpdateCodePipelineActionRole74DE45DD
  EventBridgeResourcesBatchRule41307395:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0 15 * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - ECSResourcesitrenderClusterE6F3C61F
              - Arn
          EcsParameters:
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  - Fn::GetAtt:
                      - ECSResourcesitrenderBatchTaskDefinitionSecurityGroupFA6B5E4A
                      - GroupId
                Subnets:
                  - Ref: NetworkResourcesVPCPublicSubnet1Subnet6F6A3BBC
                  - Ref: NetworkResourcesVPCPublicSubnet2Subnet49109E8D
            PlatformVersion: LATEST
            TaskCount: 1
            TaskDefinitionArn:
              Ref: ECSResourcesitrenderBatchTaskDefinition912FE447
          Id: Target0
          Input: "{}"
          RoleArn:
            Fn::GetAtt:
              - ECSResourcesitrenderBatchTaskDefinitionEventsRoleB3A33D4D
              - Arn
  EventBridgeResourcesBackendEcrPushRule56E51623:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - ECR Image Action
        detail:
          action-type:
            - PUSH
          repositoryName:
            - Ref: ECRResourcesBackendRepository0DE1D09D
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: CodePipelineResourcesBackendPipeline12BC99AD
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - CodePipelineResourcesBackendPipelineEventsRole46C61BDE
              - Arn
  EventBridgeResourcesBatchEcrPushRule4CC5EB00:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - ECR Image Action
        detail:
          action-type:
            - PUSH
          repositoryName:
            - Ref: ECRResourcesBatchRepositoryF70A7F5B
      State: ENABLED
      Targets:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":codepipeline:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - ":"
                - Ref: CodePipelineResourcesBatchPipelineCD71CF92
          Id: Target0
          RoleArn:
            Fn::GetAtt:
              - CodePipelineResourcesBatchPipelineEventsRoleD404B6A7
              - Arn
  SNSResourcesPipelineSNSTopic0835E43B:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: codepipeline-sns-topic
  SNSResourcesPipelineSNSTopicPolicyCDCE77C6:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codestar-notifications.amazonaws.com
            Resource:
              Ref: SNSResourcesPipelineSNSTopic0835E43B
            Sid: "0"
        Version: "2012-10-17"
      Topics:
        - Ref: SNSResourcesPipelineSNSTopic0835E43B
  SNSResourcesCopePipelineChatbotRoleF211D4F1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: chatbot.amazonaws.com
        Version: "2012-10-17"
      RoleName: codepipeline-chatbot-role
  SNSResourcesCodepipelineChatbotSlackChannelDFFDE953:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties:
      ConfigurationName: codepipeline-channel
      IamRoleArn:
        Fn::GetAtt:
          - SNSResourcesCopePipelineChatbotRoleF211D4F1
          - Arn
      SlackChannelId:
        Ref: SsmParameterValueslackcodepipelineidC96584B6F00A464EAD1953AFF4B05118Parameter
      SlackWorkspaceId:
        Ref: SsmParameterValueslackworkspaceidC96584B6F00A464EAD1953AFF4B05118Parameter
      SnsTopicArns:
        - Ref: SNSResourcesPipelineSNSTopic0835E43B
  SNSResourcesBackendPipelineNotificationRuleB8B2428B:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      DetailType: FULL
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-started
        - codepipeline-pipeline-pipeline-execution-succeeded
        - codepipeline-pipeline-pipeline-execution-failed
      Name: ItrenderSNSResourcesBackendPipelineNotificationRule9C5592C0
      Resource:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":codepipeline:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CodePipelineResourcesBackendPipeline12BC99AD
      Targets:
        - TargetAddress:
            Ref: SNSResourcesPipelineSNSTopic0835E43B
          TargetType: SNS
  SNSResourcesBatchPipelineNotificationRuleC11E5506:
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      DetailType: FULL
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-started
        - codepipeline-pipeline-pipeline-execution-succeeded
        - codepipeline-pipeline-pipeline-execution-failed
      Name: ItrenderSNSResourcesBatchPipelineNotificationRuleB911F85A
      Resource:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":codepipeline:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: CodePipelineResourcesBatchPipelineCD71CF92
      Targets:
        - TargetAddress:
            Ref: SNSResourcesPipelineSNSTopic0835E43B
          TargetType: SNS
  SNSResourcesBackendLoggroupSNSTopic2E3737D8:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: backend-loggroup-sns-topic
  SNSResourcesBackendLoggroupSlackChannelConfigurationRole6ACFC640:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: chatbot.amazonaws.com
        Version: "2012-10-17"
  SNSResourcesBackendLoggroupSlackChannel72C9876B:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties:
      ConfigurationName: backend-loggroup-channel
      IamRoleArn:
        Fn::GetAtt:
          - SNSResourcesBackendLoggroupSlackChannelConfigurationRole6ACFC640
          - Arn
      SlackChannelId:
        Ref: SsmParameterValueslackbackendidC96584B6F00A464EAD1953AFF4B05118Parameter
      SlackWorkspaceId:
        Ref: SsmParameterValueslackworkspaceidC96584B6F00A464EAD1953AFF4B05118Parameter
      SnsTopicArns:
        - Ref: SNSResourcesBackendLoggroupSNSTopic2E3737D8
  CloudWatchResourcesMyMetricFilterC5952804:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: ?"ERROR" ?"Error" ?"WARN" ?"Warn" ?"warn" ?"error"
      LogGroupName:
        Ref: LambdaResourcesBackendLambdaLogGroupD59E3598
      MetricTransformations:
        - MetricName: WarnErrorCount
          MetricNamespace: MyApp
          MetricValue: "1"
  CloudWatchResourcesMyAlarmD8469815:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - Ref: SNSResourcesBackendLoggroupSNSTopic2E3737D8
      AlarmDescription: Alarm when ERROR or WARN appears in logs
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: WarnErrorCount
      Namespace: MyApp
      Period: 300
      Statistic: Average
      Threshold: 1
Parameters:
  RDSResourcesDBNameParameterF7365EAE:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /itrender/POSTGRES_DB
  ECSResourcesQiitaAccessTokenParameter7A382DAF:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /itrender/QIITA_ACCESS_TOKEN
  ECSResourcesSentryDsnParameter1F575080:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /itrender/SENTRY_DSN/batch
  ECSResourcesYoutubeApiKeyParameterDE8FE04A:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /itrender/YOUTUBE_API_KEY
  SsmParameterValueitrenderSENTRYDSNbackendC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /itrender/SENTRY_DSN/backend
  SsmParameterValueitrenderCertificateArnC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /itrender/CertificateArn
  SsmParameterValueslackcodepipelineidC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /slack/codepipelineid
  SsmParameterValueslackworkspaceidC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /slack/workspaceid
  SsmParameterValueslackbackendidC96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /slack/backendid

